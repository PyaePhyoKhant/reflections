How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Since we can view code changes easily, it helps to spot the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It save time and energy. I can easily roll back if I mess up.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

By doing manually, I have more flexibility and control but I may forget to save.
By automatically, forgetting to save will not be problem but I don't have much control and each save may have nonworking code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

VCS like Git is created for mainly coding. So, it makes more sense to save multiple files in one commit.
But on the other hand, like Google Docs, this is not the case.

How can you use the commands git log and git diff to view the history of files?
"git log (add some flags if necessary)" to view history
"git diff commit1 commit2" to compare commit.

How might using version control make you more confident to make changes that
could break something?
Even if I break something, I can checkout to older versions.

Now that you have your workspace set up, what do you want to try using Git for?
To follow the course
